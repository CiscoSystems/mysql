#!/bin/sh

set -e

ROOTARGS="-uroot -p`cat /var/lib/juju/mysql.passwd`"

# Others can join that service but only the lowest will be the master
# Note that we could be more automatic but for now we will wait for
# service and unit settings to define a "master override" to allow
# migrating slaves selectively
master=`relation-list | head -1`
if [ "$JUJU_REMOTE_UNIT" != "$master" ] ; then
  exit 0;
fi
echo master=$master

for setting in user password hostname port dumpurl; do
    value=`relation-get $setting`
    if [ -z "$value" ] ; then
        echo "$setting is empty! Aborting"
        exit 0
    fi        
    echo $setting=$value
    eval $setting=$value
done

dumpurl=http://$hostname/$dumpurl
echo Stopping slave...
mysql $ROOTARGS -e "STOP SLAVE"

# Normally this will be empty anyway, but it will save our admin
# if he accidentally relates a master with some other master!
backup=/var/backups/alldbs-`date +%Y%m%d%H%M%S`.sql.gz
mysqldump $ROOTARGS --all-databases --single-transaction |gzip> $backup

mysql $ROOTARGS -e "RESET SLAVE"
mysql $ROOTARGS -e "CHANGE MASTER TO MASTER_HOST='$hostname', MASTER_USER='$user', MASTER_PASSWORD='$password', MASTER_PORT=$port"
echo Importing $dumpurl into MySQL
curl --silent --show-error $dumpurl |zcat| mysql $ROOTARGS
# Root pw gets overwritten by import
echo Re-setting Root Pasword -- can use ours because it hasnt been flushed
myrootpw=`cat /var/lib/juju/mysql.passwd`
mysqladmin -uroot -p$myrootpw password $myrootpw
# Debian packages expect debian-sys-maint@localhost to be root privileged and
# configured in /etc/mysql/debian.cnf. we just broke that.. fix it
mysql $ROOTARGS -e "GRANT ALL PRIVILEGES ON *.* TO 'debian-sys-maint'@'localhost' IDENTIFIED BY '$myrootpw'"
touch /etc/mysql/debian.cnf
chmod 0600 /etc/mysql/debian.cnf
cat > /etc/mysql/debian.cnf <<EOF
[client]
host=localhost
user=debian-sys-maint
password=$myrootpw
socket=/var/run/mysqld/mysqld.sock
[mysql_upgrade]
host=localhost
user=debian-sys-maint
password=$myrootpw
socket=/var/run/mysqld/mysqld.sock
basedir=/usr
EOF

serverid=`augtool get /files/etc/mysql/my.cnf/target[3]/server_id | awk -F" = " '{print $2}'`
server_id_name="server_id"
if [ -z "$serverid" ] ; then
  serverid=`augtool get /files/etc/mysql/my.cnf/target[3]/server-id | awk -F" = " '{print $2}'`
  server_id_name="server-id"
fi
if [ -z "$serverid" ] ; then
  serverid=`echo $user | cut -d/ -f2`
fi
if [ -z "$serverid" -o "$serverid" -lt 100000 ] ; then
  # add 100000 to server_id to avoid conflicts w/ masters
  serverid=$(($serverid+100000))
  echo "set /files/etc/mysql/my.cnf/target[3]/$server_id_name $serverid\nsave" | augtool -b
  service mysql stop
  # clear binlogs
  binlog=`augtool get /files/etc/mysql/my.cnf/target[3]/log_bin|cut -d' ' -f3`
  backupdir=/var/backups/binlogs-`date +%Y%m%d%H%M%S`
  mkdir -p $backupdir
  mv $binlog* $backupdir || :
  service mysql start
fi
mysql $ROOTARGS -e "START SLAVE"
mysql $ROOTARGS -e "SHOW SLAVE STATUS"
touch /var/lib/juju/i.am.a.slave
